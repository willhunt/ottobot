<?xml version='1.0'?>

<robot name="ottobot" 
    xmlns:xacro="http://www.ros.org/wiki/xacro">

    <!-- SUB-COMPONENTS -->
    <xacro:include filename="$(find ottobot_description)/urdf/ottobot_wheel.urdf.xacro" />
    <xacro:include filename="$(find ottobot_description)/urdf/kinect.urdf.xacro" />

    <!-- PROPERTIES -->
    <xacro:property name="M_PI" value="3.14159"/>

    <xacro:property name="parent" value="robot_footprint" />

    <xacro:property name="chassis_mass" value="15.0" />
    <xacro:property name="chassis_height" value="0.12" />
    <xacro:property name="chassis_length" value="0.4" />
    <xacro:property name="chassis_width" value="0.2" />

    <xacro:property name="wheel_mass" value="1.5" />
    <xacro:property name="wheel_width" value="0.06" />
    <xacro:property name="wheel_rad" value="0.1" />
    <xacro:property name="wheel_forward_offset" value="0.13" />
    <xacro:property name="wheel_left_offset" value="${chassis_width/2 + 0.05}" />

    <!-- Kinect pose -->
    <xacro:property name="cam_px" value="-0.087" />
	<xacro:property name="cam_py" value="-0.0125" /> Y varies for different configurations. get sets in sensors_urdf
	<xacro:property name="cam_pz" value="0.2870" />
	<xacro:property name="cam_or" value="0" />
	<xacro:property name="cam_op" value="0" />
	<xacro:property name="cam_oy" value="0" />
    
    <!-- PLUGINS -->
    <xacro:include filename="$(find ottobot_description)/urdf/roscontrol.gazebo.xacro" />

    <!-- PARTS -->
    <link name="${parent}"></link>

    <joint name="${parent}_joint" type="fixed">
        <origin xyz="0 0 ${wheel_rad}" rpy="0 0 0" />
        <parent link="${parent}"/>
        <child link="chassis" />
    </joint>

    <link name='chassis'>
        <!-- <pose>0 0 0.1 0 0 0</pose> -->

        <inertial>
            <mass value="${chassis_mass}"/>
            <origin xyz="0 0 0" rpy=" 0 0 0"/>
            <inertia    ixx="${1/12 * chassis_mass * (chassis_height**2 + chassis_width**2)}"
                        ixy="0"
                        ixz="0"
                        iyy="${1/12 * chassis_mass * (chassis_height**2 + chassis_length**2)}"
                        iyz="0"
                        izz="${1/12 * chassis_mass * (chassis_length**2 + chassis_width**2)}" />
        </inertial>

        <collision name='collision'>
            <origin xyz="0 0 0" rpy=" 0 0 0"/>
            <geometry>
                <box size="${chassis_length} ${chassis_width} ${chassis_height}"/>
            </geometry>
        </collision>

        <visual name='chassis_visual'>
            <origin xyz="0 0 0" rpy=" 0 0 0"/>
            <geometry>
                <box size="${chassis_length} ${chassis_width} ${chassis_height}"/>
            </geometry>
        </visual>
    </link>

    <!-- WHEELS - - - - - - - - -->
    <!-- Format from https://github.com/husky/husky/blob/melodic-devel/husky_description/urdf/husky.urdf.xacro -->
    <xacro:ottobot_wheel wheel_prefix="front_left">
        <origin xyz="${wheel_forward_offset} ${wheel_left_offset} 0" rpy="0 0 0" />
    </xacro:ottobot_wheel>
    <xacro:ottobot_wheel wheel_prefix="front_right">
        <origin xyz="${wheel_forward_offset} -${wheel_left_offset} 0" rpy="0 0 0" />
    </xacro:ottobot_wheel>
    <xacro:ottobot_wheel wheel_prefix="back_left">
        <origin xyz="-${wheel_forward_offset} ${wheel_left_offset} 0" rpy="0 0 0" />
    </xacro:ottobot_wheel>
    <xacro:ottobot_wheel wheel_prefix="back_right">
        <origin xyz="-${wheel_forward_offset} -${wheel_left_offset} 0" rpy="0 0 0" />
    </xacro:ottobot_wheel>


    <!-- SENSORS - - - - - - - - -->
    <xacro:sensor_kinect parent="${parent}">
    </xacro:sensor_kinect>


    <!-- COLORS - - - - - - - - -->
    <gazebo reference="left_wheel">
        <material>Gazebo/Turquoise</material>
    </gazebo>
    <gazebo reference="right_wheel">
        <material>Gazebo/Turquoise</material>
    </gazebo>
    <gazebo reference="chassis">
        <material>Gazebo/SkyBlue</material>
    </gazebo>
</robot>
